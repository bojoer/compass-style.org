<h1>Sass Pixelations</h1>
<p id="description">
Below there are ten thousand DOM elements laid out in a 100 by 100 pixel grid.<br/>
This area has been styled with CSS generated from a Sass Stylesheet.
</p>

<div id="pixelation">
<h2><%= @stylesheet.title %></h2>
<div id="pixel-info" style="display: none;">
  <div id="pixel-tag"></div>
  <div id="zoom">
    <div class="pixelated">
      <p id="z-0-0"></p>
      <p id="z-0-1"></p>
      <p id="z-0-2"></p>
      <p id="z-0-3"></p>
      <p id="z-0-4"></p>
      <p id="z-0-5"></p>
      <p id="z-0-6"></p>
      <p id="z-0-7"></p>
      <p id="z-0-8"></p>
      <p id="z-1-0"></p>
      <p id="z-1-1"></p>
      <p id="z-1-2"></p>
      <p id="z-1-3"></p>
      <p id="z-1-4"></p>
      <p id="z-1-5"></p>
      <p id="z-1-6"></p>
      <p id="z-1-7"></p>
      <p id="z-1-8"></p>
      <p id="z-2-0"></p>
      <p id="z-2-1"></p>
      <p id="z-2-2"></p>
      <p id="z-2-3"></p>
      <p id="z-2-4"></p>
      <p id="z-2-5"></p>
      <p id="z-2-6"></p>
      <p id="z-2-7"></p>
      <p id="z-2-8"></p>
      <p id="z-3-0"></p>
      <p id="z-3-1"></p>
      <p id="z-3-2"></p>
      <p id="z-3-3"></p>
      <p id="z-3-4"></p>
      <p id="z-3-5"></p>
      <p id="z-3-6"></p>
      <p id="z-3-7"></p>
      <p id="z-3-8"></p>
      <p id="z-4-0"></p>
      <p id="z-4-1"></p>
      <p id="z-4-2"></p>
      <p id="z-4-3"></p>
      <p id="z-4-4"></p>
      <p id="z-4-5"></p>
      <p id="z-4-6"></p>
      <p id="z-4-7"></p>
      <p id="z-4-8"></p>
      <p id="z-5-0"></p>
      <p id="z-5-1"></p>
      <p id="z-5-2"></p>
      <p id="z-5-3"></p>
      <p id="z-5-4"></p>
      <p id="z-5-5"></p>
      <p id="z-5-6"></p>
      <p id="z-5-7"></p>
      <p id="z-5-8"></p>
      <p id="z-6-0"></p>
      <p id="z-6-1"></p>
      <p id="z-6-2"></p>
      <p id="z-6-3"></p>
      <p id="z-6-4"></p>
      <p id="z-6-5"></p>
      <p id="z-6-6"></p>
      <p id="z-6-7"></p>
      <p id="z-6-8"></p>
      <p id="z-7-0"></p>
      <p id="z-7-1"></p>
      <p id="z-7-2"></p>
      <p id="z-7-3"></p>
      <p id="z-7-4"></p>
      <p id="z-7-5"></p>
      <p id="z-7-6"></p>
      <p id="z-7-7"></p>
      <p id="z-7-8"></p>
      <p id="z-8-0"></p>
      <p id="z-8-1"></p>
      <p id="z-8-2"></p>
      <p id="z-8-3"></p>
      <p id="z-8-4"></p>
      <p id="z-8-5"></p>
      <p id="z-8-6"></p>
      <p id="z-8-7"></p>
      <p id="z-8-8"></p>
    </div>
    <div id="select-message">
      Click to freeze.
    </div>
    <div id="deselect-control" style="display:none;">
      <a href="javascript:deselect_pixel()">Unfreeze</a>
    </div>
  </div>
</div>
<div id="container">
  <p id="please-wait">
    Rendering Pixels.<br/>
    Please Wait.
  </p>
<div id="pixels0" class="pixelated" style="display:none;">
</div>
<div id="pixels1" class="pixelated" style="display:none;">
</div>
<div id="pixels2" class="pixelated" style="display:none;">
</div>
<div id="pixels3" class="pixelated" style="display:none;">
</div>
</div>
</div>

<div id="make-your-own">
<h2>Stylesheet for this Pixelation</h2>
<p>Feel free to edit it and see the changes</p>
<textarea id="stylesheet">
<%= @stylesheet.sass %>
</textarea>
<div id="error"></div>
</div>

<script type="text/javascript">
  function updatePixelationStyles(transport) {
    setInnerText($('pixelation-styles'), transport.responseText);
    clearCompilationError();
  }

  function clearCompilationError() {
    $('error').removeClassName("active");
    setInnerText($('error'), "");      
  }
  function displayCompilationError(transport) {
    setInnerText($('error'), transport.responseText);  
    $('error').addClassName("active");
  }
  new Form.Element.Observer('stylesheet', 1, function(element, value) {
    new Ajax.Request(<%= compile_pixelations_stylesheets_path.to_json %>, {
      parameters : 'sass='+escape(value),
      onSuccess : updatePixelationStyles,
      on400 : displayCompilationError
    })
  });

  function setInnerText(element, value) {
    if (element['innerText']) {
      element.innerText = value;
    } else {
      element.textContent = value;
    }    
  }

  function render_pixels() {
    render_line.defer($('pixels0'), 0, 25)
    render_line.defer($('pixels1'), 25, 50)
    render_line.defer($('pixels2'), 50, 75)
    render_line.defer($('pixels3'), 75, 100)
  }

  var x_matcher = /x-(\d\d?)/;
  var y_matcher = /y-(\d\d?)/;
  function mouse_over_pixel(event) {
    if (!hover_enabled) return;
    var info = $('pixel-info');
    info.show();
    var element = event.element();
    var information = element.inspect();
    setInnerText($('pixel-tag'), information);
    var x = -1;
    var y = -1;
    var cns = element.classNames();
    cns.each(function(cls){
      if (cls.match(x_matcher)) {
        x = parseInt(RegExp.$1);
      } else if (cls.match(y_matcher)) {
        y = parseInt(RegExp.$1);
      }
    })
    if ((x > 0) && (y > 0)) {
      zoomTo(x,y);
    }
  }

  function zoomTo(x,y) {
    for (var i = 0; i < 9; i++) {
      for (var j = 0; j < 9; j++) {
        $('z-'+i+'-'+j).className = "x-"+(x+j-4)+" y-"+(y+i-4)
      }
    }
  }

  function hide_pixel_info(event) {
    if (!hover_enabled) return;
    $('pixel-info').hide();
  }

  var hover_enabled = true;
  function select_pixel(event) {
    hover_enabled = false;
    $('deselect-control').show();
    $('select-message').hide();
  }

  function deselect_pixel() {
    $('deselect-control').hide();
    $('select-message').show();
    hover_enabled = true;  
    hide_pixel_info();
  }

  function attach_interactive_behaviors() {
    $$('.pixelated').each(function(e){
      e.observe('mouseover', mouse_over_pixel)
      e.observe('mouseout', hide_pixel_info)
      e.observe('click', select_pixel)
    });
  }
  function render_line(container, line_number, last_line_number) {
    html = "";
    for (var x = 0; x < <%= @width %>; x++) {
      html += '<p class="x-' + x + ' y-' + line_number + '" />'
    }    
    container.insert(html, {position : 'bottom'})
    if (line_number + 1 < last_line_number) {
      render_line.defer(container, line_number + 1, last_line_number)
    } else if (last_line_number == 100) {
      $('please-wait').hide();
      $$('.pixelated').each(function(e){
        e.show();
      });
      attach_interactive_behaviors.defer();
    }
  }
  window.onload = render_pixels;
</script>
